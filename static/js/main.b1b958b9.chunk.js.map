{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","e","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","className","style","cursor","onClick","float","color","bind","Link","to","marginRight","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","property","target","defineProperty","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","Header","href","branding","About","NotFound","Test","title","body","console","log","fetch","then","response","json","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b1b958b9.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"DELETE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n    case \"ADD_CONTACT\":\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n    case \"UPDATE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.map(\n          contact =>\n            contact.id === action.payload.id\n              ? (contact = action.payload)\n              : contact\n        )\n      };\n    default:\n      return state;\n  }\n};\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: action => {\n      this.setState(state => reducer(state, action));\n    }\n  };\n\n  async componentDidMount() {\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n\n    this.setState({ contacts: res.data });\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Consumer } from \"../../context\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n  onShowClick = e => {\n    this.setState({ showContactInfo: !this.state.showContactInfo });\n  };\n  onDeleteClick = async (id, dispatch) => {\n    try {\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\n    } catch {\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\n    }\n  };\n  render() {\n    //destructuring\n    const { id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>\n                {name}{\" \"}\n                <i\n                  style={{ cursor: \"pointer\" }}\n                  onClick={this.onShowClick}\n                  className=\"fas fa-sort-down\"\n                />\n                <i\n                  className=\"fas fa-times\"\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                />\n                <Link to={`contact/edit/${id}`}>\n                  <i\n                    className=\"fas fa-pencil-alt\"\n                    style={{\n                      cursor: \"pointer\",\n                      float: \"right\",\n                      color: \"black\",\n                      marginRight: \"1rem\"\n                    }}\n                  />\n                </Link>\n              </h4>\n              {showContactInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">Email : {email}</li>\n                  <li className=\"list-group-item\">Phone : {phone}</li>\n                </ul>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired\n};\n\nexport default Contact;\n","import React, { Component } from \"react\";\nimport Contact from \"./Contact\";\nimport { Consumer } from \"../../context\";\n\nclass Contacts extends Component {\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { contacts } = value;\n          return (\n            <React.Fragment>\n              <h1 className=\"dislay-4 mb-2\">\n                <span className=\"text-danger\">Contact </span>\n                List\n              </h1>\n              {contacts.map(contact => (\n                <Contact key={contact.id} contact={contact} />\n              ))}\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Contacts;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={classnames(\"form-control form-control-lg\", {\n          \"is-invalid\": error\n        })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nTextInputGroup.defaultProps = {\n  type: \"text\"\n};\nexport default TextInputGroup;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from \"axios\";\n\nclass AddContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n  onChange = e => {\n    var property = e.target.name;\n    this.setState({ [property]: e.target.value });\n  };\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n\n    //Check for errors\n    if (name === \"\") {\n      this.setState({\n        errors: {\n          name: \"Name is required\"\n        }\n      });\n      return;\n    }\n    if (email === \"\") {\n      this.setState({\n        errors: {\n          email: \"Email is required\"\n        }\n      });\n      return;\n    }\n    if (phone === \"\") {\n      this.setState({\n        errors: {\n          phone: \"Phone is required\"\n        }\n      });\n      return;\n    }\n\n    const newContact = {\n      name,\n      email,\n      phone\n    };\n\n    const res = await axios.post(\n      \"https://jsonplaceholder.typicode.com/users\",\n      newContact\n    );\n\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\n\n    //clear state\n    this.setState({ name: \"\", phone: \"\", email: \"\", errors: {} });\n\n    this.props.history.push(\"/\");\n  };\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name..\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"Enter Email..\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone..\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Add Contact\"\n                    className=\"\n            btn btn-block btn-light\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default AddContact;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from \"axios\";\n\nclass EditContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const res = await axios.get(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    );\n\n    const contact = res.data;\n\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n    });\n  }\n  onChange = e => {\n    var property = e.target.name;\n    this.setState({ [property]: e.target.value });\n  };\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n\n    //Check for errors\n    if (name === \"\") {\n      this.setState({\n        errors: {\n          name: \"Name is required\"\n        }\n      });\n      return;\n    }\n    if (email === \"\") {\n      this.setState({\n        errors: {\n          email: \"Email is required\"\n        }\n      });\n      return;\n    }\n    if (phone === \"\") {\n      this.setState({\n        errors: {\n          phone: \"Phone is required\"\n        }\n      });\n      return;\n    }\n\n    const updContact = {\n      name,\n      email,\n      phone\n    };\n    const { id } = this.props.match.params;\n\n    const res = await axios.put(\n      `https://jsonplaceholder.typicode.com/users/${id}`,\n      updContact\n    );\n\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\n    //clear state\n    this.setState({ name: \"\", phone: \"\", email: \"\", errors: {} });\n\n    this.props.history.push(\"/\");\n  };\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name..\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"Enter Email..\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone..\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Update Contact\"\n                    className=\"\n            btn btn-block btn-light\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default EditContact;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nconst Header = props => {\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">\n          {props.branding}\n        </a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\" /> Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\" /> Add\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-question\" /> About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\n//default props\nHeader.defaultProps = {\n  branding: \"My App\"\n};\n\n//for type validationss\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\nexport default Header;\n","import React from \"react\";\n\nexport default function About() {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple app to manage contaxts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function NotFound() {\n  return (\n    <div>\n      <h1 className=\"display-4\">\n        <span className=\"text-danger\">404</span> Page Not Found{\" \"}\n      </h1>\n      <p className=\"lead\">Sorry, Page does not exist</p>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\n\nclass Test extends Component {\n  state = {\n    title: \"\",\n    body: \"\"\n  };\n  componentDidMount() {\n    console.log(\"did mount!\");\n    fetch(\"https://jsonplaceholder.typicode.com/posts/1\")\n      .then(response => response.json())\n      .then(data => this.setState({ title: data.title, body: data.body }));\n  }\n  //   componentWillMount() {\n  //     console.log(\"Will mount!\");\n  //   }\n  //   componentWillUpdate() {\n  //     console.log(\"Will update!\");\n  //   }\n  //   componentDidUpdate() {\n  //     console.log(\"Did update!\");\n  //   }\n\n  //   componentWillReceiveProps(nextProps, nextState) {\n  //     console.log(\"Will receive props!\");\n  //   }\n\n  //   static getDerivedStateFromProps(nextProps, prevState) {\n  //     return null;\n  //   }\n\n  //   getSnapshotBeforeUpdate(prevProps, prevState) {\n  //     console.log(\"Get snapshot before update!\");\n  //   }\n\n  render() {\n    console.log(\"render\");\n    const { title, body } = this.state;\n    return (\n      <div>\n        <h1>{title}</h1>\n        <p>{body}</p>\n      </div>\n    );\n  }\n}\n\nexport default Test;\n","import React, { Component } from \"react\";\nimport { Provider } from \"./context\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport Contacts from \"./components/contacts/Contacts\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport Header from \"./components/layout/Header\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport Test from \"./components/test/Test\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route exact component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}